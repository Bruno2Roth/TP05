@{
    ViewData["Title"] = "Sala 4";
    
}
<section class="sala4">
    
    <h1 class="consigna">Simon, seguí la secuencia de colores</h1>
    <input type="button" id="button-mostrar" value="Mostrar secuencia" ONCLIck="MostrarSecuencia()">
    <form method="post" action='@Url.Action("ValidarSimon", "Home")'>
        <div>
            <input type="button" name="red-button" id="red-button" value="Rojo" ONCLIck="LlenoTextconColor('R')" class="background-red">
            <input type="button" name="green-button" id="green-button" value="Verde" ONCLIck="LlenoTextconColor('G')" class="background-green">
            <input type="button" name="yellow-button" id="yellow-button" value="Amarillo" ONCLIck="LlenoTextconColor('Y')" class="background-yellow">
            <input type="button" name="blue-button" id="blue-button" value="Blue" ONCLIck="LlenoTextconColor('B')" class="background-blue">
        </div>
        <input type="hidden" name="secuencia" id="secuencia" value="">
        <input type="submit" value="Enviar"/>
    </form>
    
</section>

<script>


    function LlenoTextconColor(color) 
    {
        document.getElementById("secuencia").value = document.getElementById("secuencia").value + color;
        console.log(document.getElementById("secuencia").value);
    }

    function esperar(ms) {
        var ahora = Date.now(), fin = ahora + ms;
        //while (Date.now() < fin) {} // esto bloquea completamente TODO
        return new Promise(resolve => setTimeout(resolve, ms));
    }
    
    function MostrarSecuencia()
    {
        var nivel = '@ViewBag.numero';
        var secuencia = @Html.Raw(Json.Serialize(ViewBag.secuencia));
        var i = 0;
        console.log(nivel);
        console.log(secuencia);
        const map = {
            'G': { id: "green-button", normal: "background-green", high: "background-green-high" },
            'Y': { id: "yellow-button", normal: "background-yellow", high: "background-yellow-high" },
            'R': { id: "red-button", normal: "background-red", high: "background-red-high" },
            'B': { id: "blue-button", normal: "background-blue", high: "background-blue-high" }
        };

        while (i < nivel){
            console.log(i);
            const letra = secuencia[i].toUpperCase();
            if (map[letra]) {
                const { id, normal, high } = map[letra];
                setTimeout(() => {
                    const btn = document.getElementById(id);
                    if (btn) {
                        btn.classList.remove(normal);
                        btn.classList.add(high);
                        // Después de 5 segundos, regresar a su clase normal
                        setTimeout(() => {
                            btn.classList.remove(high);
                            btn.classList.add(normal);
                        }, 1000);
                    }
                }, i * 1000); // Opcional: secuencial, cada uno después del anterior. Si los quieres al mismo tiempo, pon 0 en vez de i * 5000.
            }

            i++;
        }
        document.getElementById("button-mostrar").hidden = true;
        
    }
</script>
